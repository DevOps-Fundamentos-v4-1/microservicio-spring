# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- feature-ms-AndresVillalobos-mensaje

pool:
  vmImage: ubuntu-latest

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'devops-fundamentos-v4-1'
    projectKey: 'DevOps-Fundamentos-v4-1_microservicio-spring'
    projectName: 'microservicio-spring'
- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'sonarqube'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    codeCoverageToolOption: 'JaCoCo'
    codeCoverageClassFilesDirectories: 'build/classes/main/'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '3.5.0.2730'
    spotBugsAnalysis: false
- task: JMeterInstaller@0
  inputs:
    jmeterVersion: '5.4.2'

- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    command: 'login'

- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    repository: 'lobitoxic/microservicio-spring'
    command: 'build'
    Dockerfile: '**/Dockerfile'

- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    repository: 'lobitoxic/microservicio-spring'
    command: 'push'